# -*- coding: utf-8 -*-
"""proje2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Cgf5QaiXKy17R2z57KTND3iT9LFShAfl

# Netflix Original Films & IMDB Scores

## Kütüphanelerin Yüklenmesi
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px

"""## Verisetinin Yüklenmesi"""

data = pd.read_csv("NetflixOriginals.csv",encoding="ISO-8859-1")
data['IMDB Score'] = data['IMDB Score'].astype('float')

data.head()

"""## 1-) Veri setine göre uzun soluklu filmler hangi dilde oluşturulmuştur?"""

Movie_Length = []
for i in data.Runtime:
  if i <= 80:
    Movie_Length.append("Too Short")
  if i > 80 and i<= 120:
    Movie_Length.append("Normal")
  if i > 120:
    Movie_Length.append("Too Long")

data['MovieLength'] = Movie_Length
data.head()

new_data = data[data.MovieLength == 'Too Long']
new_data

uzun_diller=new_data["Language"].value_counts()
plt.bar(uzun_diller.index,uzun_diller,color="#90d590")
plt.xticks(rotation=90)
plt.title("Uzun Soluklu Filmlerin Dil Dağılımı")
plt.show()

"""## 2-) 2019 Ocak ile 2020 Haziran tarihleri arasında 'Documentary' türünde çekilmiş filmlerin IMDB değerlerini bulup görselleştiriniz."""

df=new_data   #Tarih formatını değiştirme
df['Premiere'] = pd.to_datetime(df.Premiere, format='%B %d, %Y')
df['Premiere'] = df['Premiere'].dt.strftime('%Y-%m-%d')

df

df['Premiere'] = pd.to_datetime(df['Premiere'])

timeslice1 = df[(df['Premiere'] > '2018-12-31') & (df['Premiere'] <= '2020-05-31')]
timeslice1 #2019 Ocak ile 2020 Haziran tarihleri arasında çekilmiş filmler

doc = timeslice1[(timeslice1['Genre'] == 'Documentary' )] #2019 Ocak ile 2020 Haziran tarihleri arasında 'Documentary' türünde çekilmiş filmlerin IMDB değerleri
doc

plt.barh(doc['Title'],doc['IMDB Score'],color="#90d590")
plt.title("Documentary Türünde Çekilmiş Filmlerin IMDB Değerleri")
plt.xlabel("IMDB Değerleri")
plt.show()

"""## 3-) İngilizce çekilen filmler içerisinde hangi tür en yüksek IMDB puanına sahiptir?"""

ing = data[data['Language']=='English']#Dili ingilizce olan filmler
ing.head()

best= ing.nlargest(15,'IMDB Score')
best

best= ing.nlargest(1,'IMDB Score')#İngilizce çekilen filmler içerisinde en yüksek IMDB puanına sahip olan tür
print(best['Genre'])

"""## 4-) 'Hindi' Dilinde çekilmiş olan filmlerin ortalama 'runtime' suresi nedir?"""

hind = data[data['Language']=='Hindi']#Dili hindi olan filmler
hind.head()

ort=hind['Runtime'].mean()#'Hindi' Dilinde çekilmiş olan filmlerin ortalama 'runtime' suresi 
ort

"""## 5-) 'Genre' Sütunu kaç kategoriye sahiptir ve bu kategoriler nelerdir? Görselleştirerek ifade ediniz."""

print(len(data['Genre'].value_counts()),"adet Genre kategorisi bulunmaktadır")

Genrelar=data['Genre'].value_counts()[0:9]
Genrelar["Diğer"]=data['Genre'].value_counts()[9:115].sum()
plt.barh(Genrelar.sort_values().index,Genrelar.sort_values(),	color="#90d590")
plt.title("Genre Kategorileri")
plt.xlabel("Adet")
plt.show()

"""## 6-) Veri setinde bulunan filmlerde en çok kullanılan 3 dili bulunuz.


"""

data["Language"].value_counts().head(3)

"""## 7-) IMDB puanı en yüksek olan ilk 10 film hangileridir?

"""

sub = data.groupby(['Title'])[['IMDB Score']].max()

best_10_scores = sub.nlargest(10,'IMDB Score')
best_10_scores

"""## 8-) IMDB puanı ile 'Runtime' arasında nasıl bir korelasyon vardır? İnceleyip görselleştiriniz."""

data.corr()
#korelasyon değerinin negatif çıkması iki değişkenin arasında ters yönde bir ilişki olduğunu gösterir.
#0.30-0.70 arası çıkan korelasyona sahip ise orta düzeyde ilişkileri vardır diyebiliriz.

#Heatmap ile de görselleştiriyoruz.
plt.figure(figsize=(10,10))
sns.heatmap(data.corr(),annot = True, color = '#90d590');
plt.title("Correlation Between Features")

"""## 9-) IMDB Puanı en yüksek olan ilk 10 'Genre' hangileridir? Görselleştiriniz"""

sub_data=data.groupby("Genre").agg({"IMDB Score": "max"}).sort_values(by="IMDB Score", ascending=False)[0:10]
genre = sub_data.reset_index()
sns.barplot(y=genre["Genre"], x=genre["IMDB Score"], color="#90d590")
plt.show()

"""## 10-) 'Runtime' değeri en yüksek olan ilk 10 film hangileridir? Görselleştiriniz."""

sub_runtime = data.groupby(['Title'])[['Runtime']].max()

best_10_scores_runtime = sub_runtime.nlargest(10,"Runtime")
best_10_scores_runtime

runtime = sub_runtime.reset_index()
fig, ax = plt.subplots(figsize=(25,7),dpi=100)
ax.scatter(y=runtime["Runtime"], x=runtime["Title"], color='black', alpha=0.9)
sns.lineplot(x=runtime["Title"], y=runtime["Runtime"])
plt.show()

"""## 11-) Hangi yılda en fazla film yayımlanmıştır?"""

df["Year"]=df["Premiere"].dt.year  
df["Month"]=df["Premiere"].dt.month

df.groupby(df['Year'])['Title'].count() # Yıl içinde çıkan film sayıları

print("En fazla film çıkan yıl: ",df.groupby(df['Year'])['Title'].count().idxmax())

"""## 12-) Hangi dilde yayımlanan filmler en düşük ortalama IMBD puanına sahiptir?"""

pd.pivot_table(data,index="Language",values="IMDB Score",aggfunc="mean").sort_values(by=["IMDB Score"]).head(1)

"""## 13-) Hangi yılın toplam "runtime" süresi en fazladır?"""

new_data.groupby(new_data['Year'])['Runtime'].sum()

print("'Runtime' süresi en fazla olan yil:",new_data.groupby(new_data['Year'])['Runtime'].sum().idxmax())
print(new_data.groupby(new_data['Year'])['Runtime'].sum().idxmax(), "yilinda toplam 'Runtime' süresi:",new_data.groupby(new_data['Year'])['Runtime'].sum().max())

"""## 14-) Her bir dilin en fazla kullanıldığı "Genre" nedir?"""

data.groupby(["Language"])["Genre"].value_counts(sort=True).groupby(level=0).head(1)

"""## 15-) Veri setinde outlier veri var mıdır? Açıklayınız."""

data.plot(kind="box", subplots=True, figsize=(15,15))
#Runtime ve IMDB Score verilerinde box plotta görüldüğü üzere (Q1-1.5IQR) ve (Q3+1.5IQR) uçları dışında veriler bulunmaktadır. Bu veriler outlier verilerdir.